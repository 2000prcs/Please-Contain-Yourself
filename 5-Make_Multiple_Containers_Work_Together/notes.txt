5-Make multiple containers work together



- 
- looks like containers will be able to communicate if connected to the same network
- do they just need to be listening to ports? on which? the container of the host?
- make sure it does work when on the same network but that it doesnt when they are on different networks
- containers connected to two networks can link networks

- a survey server that saves responses to a database and asks if you want to submit another response
- a mongodb? database that saves the responses (how to work in the command line of inside the container)
- a results server that asks for, formats, and serves a view of the form responses

- Talk about the fact that --link is depreciated
- Talk about using volumes to persist data outside the container here?
- how to get into the command line of a container
- cross network connecting containers
- default network is bridge
- can containers on custom networks not connect to outside world?
- overlay vs. underlay vs. bridge

docker network inspect <network>
docker attach <container>
ping
docker network create
docker network ls
docker network connect ( to connect a container after the fact)


""""""spin them all up normally, can they talk?
	ethier way, explain why or why not
		if yes, spin db up on none network to isolate 
		if no, explain why i guess

show how to create a new network and (depending if they could talk before or not):
	Y: 
	N: place all on new network and show connection""""""

	spin them up: what is the default network? use docker inspect?


---------

	I NEED TO SEE IF THE CONTAINERS I HAVE MADE SO FAR ARE ACCESSABLE TO THE OUTSIDE WORLD IF USING LOCALHOST.

	Are the default networks not accessable to the outside world?

	if not, I need to mention this as a final note in this module-- and address it during the deployment module

makesure they are continuing to use docker logs to check the status of container, maybe when they first run it and it tries to connect to local host rather than the mongo container - name it something a little crazy so they know mongo is not a keyword but rather the container name


I should probably use this module to talk about persisting data with volumes might have found the answer in that SO article

how do i work in the terminal of a container, the mongo one to show tables for example

is there a way to conditionally connect to localhost?, like try a container first?

whats my container's ip address?

will it connect like it did on the default network?

is it ALWAYS SPECIFICALLY the container name? like cani i change it and it works with the new one?

-----------

ONE KIND OF IMAGE PER CONTAINER (not a bunch shoved into one, that would make a big unwieldy image/container), FORCES US TO THINK IN MICROSERVICES, BREAKS UP MONOLITHIC APPLICATIONS