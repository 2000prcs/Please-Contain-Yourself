6-Docker Compose for multicontainer apps

x I frickin' love every logo for the Docker services. They're so cute and nautical themed I wanna flip.

x compose the polling app in an attahced state

x check out the app 

x modify the yml file to reflect what depends on what

x modify the source code to get the server to auto reconnect

x modify the dockerfile and source code to use yarn, see if its a faster build

x go through all the parts of the .yml file 

x  ASIDE: about the start up order https://docs.docker.com/compose/startup-order/ and it is a good idea to make your archetecture robust enough to handle network hiccups without crashing

x ctrl c when done

x look at the things it made with docker images and docker ps -a

x talk about how it creates its own network (look at it with netwok ls)

- look at the source code and talk about referencing the containers by name rather than ip (can it be whatever name?? YES!) you dont know what the containers address is going to be so the connection urls support automatic service discovery

- bring it up again in a detached state

- see that it reuses everything, does not rebuild the images

- bring it down and see that it gets rid of the containers but not the images, but you can use the --rmi option to remove the images (docker-compose stop to stop the composed app, you probably have to be in the directory of the .yml file?)

- the next time you bring it up it will not build the images again unless you use the build flag 

- Make a change in the source code and bring it up one last time with the build option

- talk aboiut needing to rebuild the image if there is no volume mounted, but if there is, you would just need to restart the all the containers with docker compose restart

- introduce the idea of volume garbage and modify existing blurb to account for the fact that volumes made by spinning up individual containers dont seem to show up.

-  talk about using the -v and --rmi opptions with compose down (docker compose apperently makes volumes with its containers. talk about all the caching Docker does and why its important to clean up)
