1-Installation:
Download docker https://www.docker.com/products/docker
click on the whale and complete installation
check docker version commands
- docker info
- hello world container
- explain the warning, explain to wait and where the image came from
- let them know that if they dont see the succesful pulldown message that something went wrong and to try again
- explain what a dockerflie, image, and container is and the differences (use sandwich analogy, Dockerfile is a recipie, image is a sandwich made from the recipie that you dont dare eat becaure its so perfect, so preserve in the refidgerator forever- if you ever want that sandwich, you put it in your sandwich cloning machine so you can spin up and eat as many of that sandwich as you want based on and without messing with your perfect mother sandwich in the refirdgerator.)
- docker info again
- show the docker images on your machine
- show all the containers on your machine, use docker ps and show that you need to use ps -a, talk about how hello world is a short lived container
- spin up a bunch of hello world containers, show that they went through their lifecycle by showing the containers again 
- talk about how names are randomly assigned but well see how to assign names later
- give one a name with --name punk_unicorns, show it with ps -a
- show that there is still only one image

- spin up a nginx webserver "docker run -d -p 80:80 --name webserver nginx", will explain what the other flags do later (but have a picture anyways)
(with out the -d flag it shows logging but you cant escape without ctrl+C, once you exit tho, you can restart it and it behaves normally)
-d === run in a detached state; which means just run the container in the background without entering into it
- try it out without -d
- show that ps shows running ones with details
- go to local host
- docker stop webserver, not in ps any more but can find it in ps -a
- you can restart it by going docker start with either the name or the container id (same goes with stopping)
- if you want to remove a stopped container, docker rm <container-name>
- if you want to remove a running container without stopping it first use docker rm -f <>
- still have both images locally (show that with docker images), if you needed to remove them you would go:
docker rmi <image-name>
- THIS WILL FAIL because there are still containers that reference the immage even though they are stopped
- remove all the hello world containers that have reached the end of thier lifecycle and stopped by docker rm <container-name> <container-name> <container-name>
- try to remove the hello world image again. check thats its gone with docker images
-that being said, if you dont want to clean up after yourself you can just go docker rmi -f <image-name> but you should really clean up after yourself, no one else is going to keep your computer clean.
- you can run an image with the --rm flag like so, docker run -d -p 80:80 --rm --name goodbye nginx
- see that its running with docker ps
- stop it
- look for it with docker ps -a, Its nowhere to be   
- finally, remove the nginx image
DONE
